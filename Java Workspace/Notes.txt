Topics:
    - Inheritance in Java
    - Abstract and final class in Java
    - Interface in Java
    - Overloading and overriding in Java
    - Access Protection in Java
    - How to import a predefined package by Java and user defined from other packages


Abstract class
 - An Abstract class must be defined with an Abstract keyword
 - Abstraction is the process of hiding the implementation details and showing only the necessary functionality(function declarations) to the user.
 - Can not make object of Abstract class directly but can be made through derived class
 -> Examples
    - Abstract class may contain Abstract and non Abstract methods
    - (0-100%) Abstract methods can be there
    - In case of Interface: 100% Abstract methods should be there

Final Class:
 - The main purpose of using a class being 
 Static and non static
  - Methods
  - Variables (count objects, jagged array)
  
  A static method is a method that belongs to a class, but it does not to an instance of a class and this method can be called without the instance or object of that class.
  A static method can only access static data members and static methods of another class or same class but cannot access non static methods or variables.
  But this rule is not applied on non static members and variables.
  
  class ABCD
  {
  	int a = 11;
  	static int b = 12;
  	void m1()
  	{
  		System.out.println(a + b);
  	}
  	static void m2()
  	{
  		System.out.println(b);
  	}
  }
 

